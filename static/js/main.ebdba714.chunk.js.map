{"version":3,"sources":["util.js","components/Editor.js","components/controls/Select.js","components/Section.js","system.js","components/TopBar.js","components/Modal.js","components/Importer.js","components/Preview.js","components/Presets/Presets.js","components/Presets/index.js","App.js","components/Loader.js","index.js","components/Item.js"],"names":["data","axios","require","promises","default","JSON_CONFIG_URL","mix","a","b","Array","isArray","Object","keys","forEach","key","clone","val","JSON","parse","stringify","loadSource","get","response","console","error","Editor","change","section","prop","value","props","onChange","settings","prevProps","__internal","configMode","this","window","componentHandler","upgradeDom","platform","base","common","base_path","basePath","isSimple","select","renderConfig","simple","sections","filter","sectionName","includeSection","eval","condition","debug","some","propName","log","name","map","items","deprecated","item","disable","enable","enabled","type","flag","multiselect","datalist","path","list","text","number","title","description","class","className","isEnabled","check","or","fillDescription","disabled","values","id","allowInput","suggestions","toLowerCase","current","ev","checked","target","newValue","idx","indexOf","push","splice","large","htmlFor","Number","min","max","replace","localPath","joinPath","split","processValue","x","toString","v","style","bottom","right","zIndex","transform","onClick","concat","Component","warn","def","undefined","Error","match","Select","selected","find","display","data-val","onKeyDown","handleKeyPress","classnames","readOnly","keyCode","dispatchEvent","MouseEvent","defaultPropTypes","styles","sectionVisible","sectionHidden","visibility","height","Section","args","state","collapsed","toggleCollapsed","setState","newProps","children","cursor","length","defaultProps","detectPlatform","navigator","userAgent","join","TopBar","src","alt","Modal","ReactDOM","findDOMNode","close","showModal","dialog","dialogPolyfill","registerDialog","isOpen","setTimeout","show","onClose","Importer","handleFileChange","bind","handleClick","file","files","domTarget","confirm","reader","FileReader","onload","_","importedData","toml","result","err","onError","defaults","blur","readAsText","refs","fileInput","click","ref","PureComponent","toToml","reduce","acc","sectionDescription","heading","width","banner","repeat","inner","left_pad","Math","floor","right_pad","toSectionHeader","split_comment_at","vals","comment","toComment","setting","toVal","configPath","unshift","multi_comment","line_length","lines","words","line","shift","Preview","generateConfig","blob","Blob","msSaveOrOpenBlob","msSaveBlob","elem","document","createElement","href","URL","createObjectURL","download","body","appendChild","removeChild","rel","location","presets","None","Defaults","Mining","Presets","preset","forceUpdate","Item","loadSettings","defaultSettings","generateDefaults","localStorage","getItem","e","setItem","loadFromLocalStorage","url","hash","startsWith","config","atob","loadFromURL","errors","settingsValue","defaultSettingsValue","expected","saveSettings","cloned","isEqual","json","btoa","d","App","handleChange","handlePreset","handleError","modal","visible","content","lis","i","Loader","marginTop","textAlign","rootElement","getElementById","render","then","catch","stylesNormal","overflow","stylesLarge","isDisabled"],"mappings":"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","file":"static/js/main.ebdba714.chunk.js","sourcesContent":["const fs = require('fs').promises;\nconst path = require('path');\nconst axios = require('axios').default;\n\nconst JSON_CONFIG_URL = \"https://raw.githubusercontent.com/tari-project/tari/development/common/config/tari.config.json\";\nconst PRESET_CONFIG_URL = \"https://raw.githubusercontent.com/tari-project/tari/config/preset\";\n\nfunction mix (a, b) {\n  if (typeof a !== 'object' || typeof b !== 'object' || Array.isArray(a) || Array.isArray(b)) {\n    return typeof b === 'undefined' ? a : b;\n  }\n\n  Object.keys(a).forEach(key => {\n    a[key] = mix(a[key], b[key]);\n  });\n\n  return a;\n}\n\nfunction clone (val) {\n  return JSON.parse(JSON.stringify(val));\n}\n\nlet data;\n\nasync function loadSource() {\n  try {\n    const response = await axios.get(JSON_CONFIG_URL);\n    data = response.data;\n  } catch (error) {\n    console.error(`Could not fetch JSON config. Falling back to local copy. ${error}`);\n    data = require('./tari.config'); //If this is called from the web we can't read the contents of the file with `fetchExtraData()`\n  }\n}\n\nasync function fetchPresets(presets) {\n  try {\n    const requests = presets.map(p => {\n      let req = {responseType: 'text'};\n      return axios.get(`${PRESET_CONFIG_URL}/${p}.toml`, req);\n    });\n    const response = await axios.all(requests);\n    return response.map(res => res.data);\n  } catch (error) {\n    console.error(`Could not fetch presets config. ${error}`);\n    return [];\n  }\n}\n\nasync function fetchExtraData() {\n  return JSON.parse(await fs.readFile(path.resolve(__dirname, './tari.config.json'), 'UTF-8'));\n}\n\nexport {mix, clone, loadSource, data, fetchExtraData, fetchPresets};\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Section from \"./Section\";\nimport Item from \"./Item\";\nimport Select from \"./controls/Select\";\n\nimport { localPath, basePath, joinPath } from \"../system\";\n\nimport \"material-design-lite\";\nimport { data } from \"../util\";\n\nclass Editor extends Component {\n  static propTypes = {\n    settings: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  change = (section, prop) => {\n    return value => {\n      this.props.onChange({\n        ...this.props.settings,\n        [section]: {\n          ...this.props.settings[section],\n          [prop]: value\n        }\n      });\n    };\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.settings.__internal.configMode !==\n      this.props.settings.__internal.configMode\n    ) {\n      window.componentHandler.upgradeDom();\n    }\n  }\n\n  render() {\n    const { settings } = this.props;\n    const { configMode, platform } = settings.__internal;\n    const base =\n      settings.common.base_path !== \"$BASE\"\n        ? settings.common.base_path\n        : basePath(platform);\n\n    const isSimple = configMode === \"simple\";\n    return (\n      <div>\n        {this.select(\"__internal\", \"platform\")}\n        {this.select(\"__internal\", \"configMode\")}\n        <div>{this.renderConfig(isSimple, settings, platform, base)}</div>\n      </div>\n    );\n  }\n\n  renderConfig(simple, settings, platform, base) {\n    this.configMode = simple ? \"simple\" : \"advanced\";\n\n    const sections = Object.keys(data)\n      .filter(sectionName => sectionName !== \"__internal\")\n      .filter(sectionName => {\n        const section = data[sectionName];\n        let includeSection = true;\n        if (\"condition\" in section) {\n          // eslint-disable-next-line no-eval\n          includeSection = eval(section.condition);\n        }\n        if (!includeSection) {\n          console.debug(\n            `Section ${sectionName} excluded due to matching condition`\n          );\n        }\n        return !!includeSection;\n      })\n      .filter(\n        sectionName =>\n          !simple ||\n          Object.keys(data[sectionName]).some(propName => {\n            const prop = data[sectionName][propName];\n            console.log(`${data[sectionName][propName].name}: ${prop.simple}`);\n            return typeof prop === \"object\" && prop.simple;\n          })\n      )\n      .map(sectionName => {\n        const section = data[sectionName];\n        let items = Object.keys(section)\n          .filter(\n            key =>\n              key !== \"section\" && key !== \"description\" && key !== \"condition\"\n          )\n          .filter(propName => !section[propName].deprecated)\n          .filter(propName => !simple || section[propName].simple)\n          .map(propName => {\n            const prop = section[propName];\n\n            let condition = true;\n            if (\"disable\" in section && propName !== \"disable\") {\n              condition = condition && !settings[sectionName].disable;\n            } else if (\"enable\" in section && propName !== \"enable\") {\n              condition = condition && settings[sectionName].enable;\n            } else if (\"enabled\" in section && propName !== \"enabled\") {\n              condition = condition && settings[sectionName].enabled;\n            }\n\n            if (\"condition\" in prop) {\n              // eslint-disable-next-line no-eval\n              condition = condition && eval(prop.condition);\n            }\n\n            let item;\n            if (prop.type === \"bool\") {\n              item = this.flag(sectionName, propName, condition);\n            } else if (\"values\" in prop) {\n              if (prop.type === \"string[]\") {\n                item = this.multiselect(sectionName, propName, condition);\n              } else {\n                item = this.select(sectionName, propName, condition);\n              }\n            } else if (\"suggestions\" in prop) {\n              item = this.datalist(sectionName, propName, condition);\n            } else if (prop.type === \"path\") {\n              item = this.path(\n                sectionName,\n                propName,\n                base,\n                platform,\n                condition\n              );\n            } else if (prop.type === \"string[]\") {\n              item = this.list(sectionName, propName, condition);\n            } else if (prop.type === \"string\") {\n              item = this.text(sectionName, propName, condition);\n            } else if (prop.type === \"number\") {\n              item = this.number(sectionName, propName, condition);\n            }\n\n            return (\n              <Fragment key={`${simple}.${sectionName}.${propName}`}>\n                {item}\n              </Fragment>\n            );\n          });\n\n        return (\n          <Section\n            key={`${simple}.${section.section}`}\n            title={section.section}\n            description={section.description}\n          >\n            <div class=\"mdl-card__actions mdl-card--border\">{items}</div>\n          </Section>\n        );\n      });\n\n    return (\n      <div className=\"mdl-card mdl-shadow--6dp  section-container\">\n        <div className=\"mdl-card__title\">\n          <div className=\"mdl-card__title-text\">Settings</div>\n        </div>\n        <div className=\"mdl-card__actions mdl-card--border\">{sections}</div>\n      </div>\n    );\n  }\n\n  select(section, prop, isEnabled = true) {\n    check(section, prop);\n\n    // TODO [ToDr] hacky\n    const { configMode } = this;\n\n    const { settings } = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const description = fillDescription(\n      data[section][prop].description[value],\n      value,\n      `${section}.${prop}`\n    );\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n      >\n        <Select\n          onChange={this.change(section, prop)}\n          value={value}\n          values={data[section][prop].values.map(val)}\n          id={`${configMode}_${prop}`}\n          disabled={!isEnabled}\n          allowInput={false}\n        />\n      </Item>\n    );\n  }\n\n  datalist(section, prop, isEnabled = true) {\n    check(section, prop);\n\n    // TODO [ToDr] hacky\n    const { configMode } = this;\n\n    const { settings } = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const suggestions = data[section][prop].suggestions.map(val);\n    const description = suggestions.some(val => val.value === value)\n      ? fillDescription(\n          data[section][prop].description[value],\n          value,\n          `${section}.${prop}`\n        )\n      : `Custom ${data[section][prop].name.toLowerCase()}`;\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n      >\n        <Select\n          onChange={this.change(section, prop)}\n          value={value}\n          values={suggestions}\n          id={`${configMode}_${prop}`}\n          disabled={!isEnabled}\n          allowInput\n        />\n      </Item>\n    );\n  }\n\n  multiselect(section, prop, isEnabled = true) {\n    check(section, prop);\n\n    // TODO [ToDr] hacky\n    const { configMode } = this;\n\n    const { settings } = this.props;\n    const current = settings[section][prop] || [];\n    const description = fillDescription(\n      data[section][prop].description,\n      current\n    );\n\n    const change = val => ev => {\n      const { checked } = ev.target;\n      const newValue = [...current];\n      const idx = newValue.indexOf(val);\n\n      if (checked) {\n        newValue.push(val);\n      } else if (idx !== -1) {\n        newValue.splice(idx, 1);\n      }\n\n      this.change(section, prop)(newValue);\n    };\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        large\n      >\n        {data[section][prop].values.map(val).map(value => {\n          const id = `${configMode}_${section}_${prop}_${value.value}`;\n\n          return (\n            <label\n              className=\"mdl-switch mdl-js-switch\"\n              htmlFor={id}\n              key={value.name}\n            >\n              <input\n                type=\"checkbox\"\n                id={id}\n                className=\"mdl-switch__input\"\n                checked={current.indexOf(value.value) !== -1}\n                disabled={!isEnabled}\n                onChange={change(value.value)}\n              />\n              <span className=\"mdl-switch__label\">{value.name}</span>\n            </label>\n          );\n        })}\n      </Item>\n    );\n  }\n\n  number(section, prop, isEnabled = true) {\n    check(section, prop);\n    const { settings } = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const description = fillDescription(data[section][prop].description, value);\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n      >\n        <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n          <input\n            className=\"mdl-textfield__input\"\n            type=\"number\"\n            value={value || 0}\n            onChange={ev => this.change(section, prop)(Number(ev.target.value))}\n            min={data[section][prop].min}\n            max={data[section][prop].max}\n            disabled={!isEnabled}\n          />\n          <span className=\"mdl-textfield__error\">\n            Please provide a valid number (min: {data[section][prop].min}, max:{\" \"}\n            {data[section][prop].max})\n          </span>\n        </div>\n      </Item>\n    );\n  }\n\n  path(section, prop, base, platform, isEnabled = true) {\n    return this.text(section, prop, isEnabled, value => {\n      if (!value) {\n        return value;\n      }\n      value = value.replace(\"$LOCAL\", localPath(platform));\n      value = value.replace(\"$BASE\", base);\n      // normalize separators\n      value = joinPath(value.split(\"\\\\\"), platform);\n      value = joinPath(value.split(\"/\"), platform);\n      return value;\n    });\n  }\n\n  text(section, prop, isEnabled = true, processValue = x => x) {\n    check(section, prop);\n    const { settings } = this.props;\n    const value = processValue(\n      or(settings[section][prop], data[section][prop].default)\n    );\n    const description = fillDescription(data[section][prop].description, value);\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n      >\n        <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n          <input\n            className=\"mdl-textfield__input\"\n            type=\"text\"\n            value={value || \"\"}\n            onChange={ev => this.change(section, prop)(ev.target.value)}\n            disabled={!isEnabled}\n          />\n        </div>\n      </Item>\n    );\n  }\n\n  flag(section, prop, isEnabled = true) {\n    check(section, prop);\n\n    // TODO [ToDr] hacky\n    const { configMode } = this;\n\n    const { settings } = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const description = fillDescription(data[section][prop].description, value);\n    const id = `${configMode}_${section}_${prop}`;\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n      >\n        <label className=\"mdl-switch mdl-js-switch\" htmlFor={id}>\n          <input\n            type=\"checkbox\"\n            id={id}\n            className=\"mdl-switch__input\"\n            checked={value}\n            disabled={!isEnabled}\n            onChange={ev => this.change(section, prop)(ev.target.checked)}\n          />\n          <span className=\"mdl-switch__label\" />\n        </label>\n      </Item>\n    );\n  }\n\n  list(section, prop, isEnabled = true) {\n    check(section, prop);\n    const { settings } = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const description = fillDescription(\n      data[section][prop].description,\n      value.toString()\n    );\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n      >\n        <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n          {value.map((v, idx) => (\n            <input\n              disabled={!isEnabled}\n              key={idx}\n              className=\"mdl-textfield__input\"\n              type=\"text\"\n              value={v || \"\"}\n              onChange={ev => {\n                const newValue = [...value];\n                if (ev.target.value !== \"\") {\n                  newValue[idx] = ev.target.value;\n                } else {\n                  newValue.splice(idx, 1);\n                }\n                this.change(section, prop)(newValue);\n              }}\n            />\n          ))}\n          <br />\n          <button\n            style={{ bottom: 0, right: 0, zIndex: 10, transform: \"scale(0.5)\" }}\n            className=\"mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect\"\n            onClick={() => this.change(section, prop)(value.concat([\"\"]))}\n            disabled={!isEnabled}\n          >\n            <i className=\"material-icons\">add</i>\n          </button>\n        </div>\n      </Item>\n    );\n  }\n}\n\nexport function fillDescription(description, value, key) {\n  if (!description) {\n    console.warn(`Cant find description for: value:${value} at ${key}`);\n    return \"unknown entry\";\n  }\n  return description.replace(/{}/g, value || \"\");\n}\n\nfunction or(value, def) {\n  if (value === undefined) {\n    return def;\n  }\n  return value;\n}\n\nfunction check(section, prop) {\n  if (!data[section][prop]) {\n    throw new Error(`Can't find data for ${section}.${prop}`);\n  }\n}\n\nfunction val(data) {\n  const match = data.match(/(.+)\\s+\\[(.+)]/);\n  if (!match) {\n    return { name: data, value: data };\n  }\n\n  return {\n    name: match[1],\n    value: match[2]\n  };\n}\n\nexport default Editor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './Select.css';\n\nfunction Select ({value, onChange, values, id, disabled, allowInput}) {\n  const selected = values.find(val => val.value === value) ||\n    (allowInput && {name: value, value}) ||\n    {};\n\n  // We cannot just remove options, since mdl is adding some additional dom nodes.\n  const list = (\n    <ul\n      className='mdl-menu mdl-menu--bottom-left mdl-js-menu'\n      htmlFor={id}\n      style={disabled ? { display: 'none' } : {}}\n    >\n      {\n        values.map(({name, value}) => (\n          <li className='mdl-menu__item' data-val={value} key={value} onClick={() => onChange(value)}>{name}</li>\n        ))\n      }\n    </ul>\n  );\n\n  return (\n    <div className='mdl-textfield mdl-js-textfield mdl-textfield--floating-label getmdl-select'>\n      <input\n        onKeyDown={handleKeyPress}\n        className={classnames('mdl-textfield__input', {\n          'is-disabled': disabled // Overcome mdl light issues\n        })}\n        disabled={disabled}\n        value={selected.name}\n        type='text'\n        id={id}\n        readOnly={!allowInput}\n        {... (allowInput ? {onChange: (ev) => onChange(ev.target.value)} : {})}\n        data-val={selected.value}\n        />\n      {list}\n    </div>\n  );\n}\n\nfunction handleKeyPress (ev) {\n  if (ev.keyCode === 13) {\n    ev.target.dispatchEvent(new window.MouseEvent('click'));\n  }\n}\n\nSelect.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.any.isRequired,\n  onChange: PropTypes.func.isRequired,\n  values: PropTypes.array.isRequired,\n  disabled: PropTypes.bool,\n  allowInput: PropTypes.bool\n};\n\nSelect.defaultPropTypes = {\n  disabled: false,\n  allowInput: false\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Section.css\";\n\nconst styles = {\n  sectionVisible: {},\n  sectionHidden: {\n    visibility: \"hidden\",\n    height: 0\n  }\n};\n\nclass Section extends Component {\n  state = {\n    collapsed: true\n  };\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      collapsed: this.props.collapsed\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.collapsed !== newProps.collapsed) {\n      this.setState({\n        collapsed: newProps.collapsed\n      });\n    }\n  }\n\n  toggleCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\n  render() {\n    const { title, description, children } = this.props;\n    const { collapsed } = this.state;\n\n    return (\n      <div className=\"section\">\n        <div onClick={this.toggleCollapsed} className=\"section-title\">\n          <h5 style={{ cursor: \"pointer\" }}>{title}</h5>\n          {children.length > 0 && (\n            <button className=\"mdl-button mdl-js-button mdl-button--icon\">\n              {collapsed ? (\n                <i className=\"material-icons\">expand_more</i>\n              ) : (\n                <i className=\"material-icons\">expand_less</i>\n              )}\n            </button>\n          )}\n        </div>\n        <p>{description}</p>\n        <ul className=\"mdl-list section-list\" style={styles.sectionVisible}>\n          {children}\n        </ul>\n      </div>\n    );\n  }\n\n  static propTypes = {\n    collapsed: PropTypes.bool,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.array])\n      .isRequired\n  };\n\n  static defaultProps = {\n    collapsed: true\n  };\n}\n\nexport default Section;\n","export function detectPlatform () {\n  if (window.navigator.userAgent.indexOf('Windows') !== -1) {\n    return 'Windows';\n  }\n\n  if (window.navigator.userAgent.indexOf('Mac') !== -1) {\n    return 'Mac OS';\n  }\n\n  return 'Linux';\n}\n\nexport function joinPath (path, platform) {\n  if (platform === 'Windows') {\n    return path.join('\\\\');\n  }\n\n  return path.join('/');\n}\n\nexport function localPath (platform) {\n  if (platform === 'Windows') {\n    return joinPath([\n      '%UserProfile%',\n      'AppData',\n      'Local',\n      'Tari',\n    ], platform);\n  }\n\n  return '$BASE';\n}\n\nexport function basePath (platform) {\n  if (platform === 'Windows') {\n    return joinPath([\n      '%AppData%',\n      'tari',\n    ], platform);\n  }\n\n  if (platform === 'Mac OS') {\n    return joinPath([\n      '$HOME',\n      '.tari',\n    ], platform);\n  }\n\n  return joinPath([\n    '~',\n    '.tari',\n  ], platform);\n}\n","import React from \"react\";\n\nfunction TopBar() {\n  return (\n    <div className=\"mdl-layout__header\">\n      <div className=\"mdl-layout__header-row\">\n        <img src=\"/tari-logo-white.svg\" alt=\"logo\" className=\"tari-logo\" />\n        <span className=\"mdl-layout-title\">Tari Config Generator</span>\n        <div className=\"mdl-layout-spacer\" />\n      </div>\n    </div>\n  );\n}\n\nexport default TopBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport dialogPolyfill from 'dialog-polyfill/dialog-polyfill.js';\nimport 'dialog-polyfill/dialog-polyfill.css';\nimport './Modal.css';\n\nclass Modal extends Component {\n\n  static propTypes = {\n    isOpen: PropTypes.bool,\n    title: PropTypes.string,\n    onClose: PropTypes.func.isRequired,\n    children: PropTypes.object\n  };\n\n  close () {\n    ReactDOM.findDOMNode(this).close();\n  }\n\n  show () {\n    ReactDOM.findDOMNode(this).showModal();\n  }\n\n  componentDidMount () {\n    const dialog = ReactDOM.findDOMNode(this);\n    if (!dialog.showModal) {\n      dialogPolyfill.registerDialog(dialog);\n    }\n\n    if (this.props.isOpen) {\n      // Delay is a workaround for paint issue (modal overlay not showing up)\n      setTimeout(() => { this.show(); }, 100);\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.isOpen && !this.props.isOpen) {\n      this.close();\n    } else if (!prevProps.isOpen && this.props.isOpen) {\n      this.show();\n    }\n  }\n\n  render () {\n    return (\n      <dialog className='mdl-dialog'>\n        <h4 className='mdl-dialog__title'>{this.props.title}</h4>\n        <div className='mdl-dialog__content'>\n          {this.props.children}\n        </div>\n        <div className='mdl-dialog__actions'>\n          <button type='button' className='mdl-button close' onClick={this.props.onClose}>OK</button>\n        </div>\n      </dialog>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport toml from 'toml';\n\nimport './Importer.css';\n\nimport {mix, clone} from '../util';\n\nclass Importer extends PureComponent {\n\n  static propTypes = {\n    defaults: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onError: PropTypes.func.isRequired\n  };\n\n  constructor (props) {\n    super(props);\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleFileChange (ev) {\n    const file = ev.target.files[0];\n    const domTarget = ev.target;\n    domTarget.value = '';\n\n    if (!window.confirm('Do you want to overwrite current config?')) {\n      return;\n    }\n\n    if (file.name.match(/.*\\.toml$/)) {\n      var reader = new window.FileReader();\n\n      reader.onload = _ => {\n        let importedData;\n\n        try {\n          importedData = toml.parse(reader.result);\n        } catch (err) {\n          this.props.onError(`Couldn't parse configuration file. ${err.toString()}`);\n          return;\n        }\n\n        const data = mix(clone(this.props.defaults), importedData);\n        domTarget.blur();\n        this.props.onChange(data);\n      };\n\n      reader.readAsText(file);\n    } else {\n      this.props.onError('Please import a .toml configuration file.');\n    }\n  }\n\n  handleClick () {\n    this.refs.fileInput.click();\n  }\n\n  render () {\n    return (\n      <button\n        className='mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-efect import'\n        onClick={this.handleClick}>\n\n        <input\n          type='file'\n          ref='fileInput'\n          onChange={this.handleFileChange} />\n\n        <i className='material-icons' id='upload'>file_upload</i>\n        <span className='mdl-tooltip' htmlFor='upload'>Load Config File</span>\n      </button>\n    );\n  }\n}\n\nexport default Importer;\n","/* global Blob */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Preview.css';\n\nimport Importer from './Importer';\n\nimport { joinPath, basePath } from '../system';\n\n// TODO [ToDr] move to some common?\nimport {fillDescription} from './Editor';\nimport {data} from \"../util\";\n\nclass Preview extends Component {\n  static propTypes = {\n    settings: PropTypes.object.isRequired,\n    defaults: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onError: PropTypes.func.isRequired\n  };\n\n  generateConfig = () => {\n    const {settings, defaults} = this.props;\n    const data = toToml(settings, defaults);\n    const filename = 'config.toml';\n    const blob = new Blob([data], {type: 'text/toml'});\n    if (window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveBlob(blob, filename);\n    } else {\n      const elem = window.document.createElement('a');\n      elem.href = window.URL.createObjectURL(blob);\n      elem.download = filename;\n      document.body.appendChild(elem);\n      elem.click();\n      document.body.removeChild(elem);\n    }\n  }\n\n  render () {\n    const {settings, defaults} = this.props;\n    return (\n      <div className='mdl-card mdl-shadow--6dp preview-card'>\n        <div className='mdl-card__title'>\n          <div className='preview-title mdl-card__title-text'>\n            config.toml\n          </div>\n        </div>\n        <div className='mdl-card__actions mdl-card--border'>\n          <textarea className='preview-editor' readOnly value={toToml(settings, defaults)} />\n        </div>\n        <div className='mdl-card__menu'>\n          <Importer defaults={defaults} onChange={this.props.onChange} onError={this.props.onError} />\n          <a\n            className='mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-efect'\n            target='_blank'\n            rel='noopener noreferrer'\n            href={window.location.toString()}>\n            <i className='material-icons' id='link'>link</i>\n            <span className='mdl-tooltip' htmlFor='link'>Link to this Config File</span>\n          </a>\n          <button\n            className='mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-efect'\n            onClick={this.generateConfig}>\n            <i className='material-icons' id='download'>cloud_download</i>\n            <span className='mdl-tooltip' htmlFor='download'>Download Config File</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction toToml (settings, defaults) {\n  const toml = Object.keys(settings)\n    .filter(section => section !== '__internal')\n    .reduce((acc, section) => {\n      // for old configs the section might be missing in defaults\n      defaults[section] = defaults[section] || {};\n\n      data[section] = data[section] || {};\n      const sectionName = data[section].section || section;\n      const sectionDescription = data[section].description || \"\";\n\n      acc.push(\"\\n\");\n      acc = acc.concat(toSectionHeader(sectionName, 120));\n      acc.push(split_comment_at(sectionDescription, 118));\n\n      const vals = Object.keys(settings[section])\n        .filter(key => !isEqual(settings[section][key], defaults[section][key]))\n        .map(key => {\n          const val = settings[section][key];\n          const comment = toComment(settings, section, key, val);\n          const setting = `${key} = ${toVal(val)}`;\n          return `\\n${comment}\\n${setting}`;\n        });\n\n      if (vals.length) {\n        acc.push(`\\n[${section}]`);\n      }\n\n      return acc.concat(vals);\n    }, []);\n\n  if (!toml.length) {\n    toml.push(\n      '',\n      '',\n      '# All values you use are defaults. Config is not needed.'\n    );\n  }\n\n  const { platform } = settings.__internal || defaults.__internal;\n  const configPath = joinPath([basePath(platform), 'config.toml'], platform);\n  toml.unshift(\n    '# This config should be placed in following path:',\n    `#   ${configPath}`,\n  );\n\n  return toml.join('\\n');\n}\n\nfunction isEqual (a, b) {\n  // TODO [todr] optimize\n  return JSON.stringify(a) === JSON.stringify(b);\n}\n\n/**\n * Splits a string at word boundaries so that each line is at most `line_length` long, and then prefixes each line\n * with a comment character\n */\nfunction split_comment_at(multi_comment, line_length) {\n  const split = (comment) => {\n    const lines = [];\n    const words = comment.split(/\\s/);\n    while (words.length > 0) {\n      let line = \"#\";\n      while (words.length > 0 && (line.length + words[0].length < line_length)) {\n        line += \" \" + words.shift();\n      }\n      lines.push(line);\n    }\n    return lines.join('\\n');\n  };\n  const comments = multi_comment.split('\\n');\n  return comments.map(split).join('\\n');\n}\n\nfunction toSectionHeader(heading, width) {\n  const banner = \"#\".repeat(width);\n  const inner = `#${\" \".repeat(width-2)}#`;\n  const left_pad = Math.floor((width-2 - heading.length) / 2);\n  const right_pad = width - heading.length - 2 - left_pad;\n  let title = `#${\" \".repeat(left_pad)}${heading}${\" \".repeat(right_pad)}#`;\n  return [banner, inner, title, inner, banner];\n}\n\nfunction toComment (settings, section, key, value) {\n  // for old configs the section might be missing in defaults\n  data[section] = data[section] || {};\n  data[section][key] = data[section][key] || {};\n\n  let comment;\n  if (typeof data[section][key].description === 'object') {\n    if ('suggestions' in data[section][key] && !(value in data[section][key].description)) {\n      comment = `Custom ${key.toLowerCase()}`;\n    }\n    comment = fillDescription(data[section][key].description[value], value);\n  } else {\n    comment = fillDescription(data[section][key].description, value);\n  }\n  return split_comment_at(comment, 118);\n}\n\nfunction toVal (val) {\n  if (typeof val === 'boolean') {\n    return `${val}`;\n  }\n\n  if (typeof val === 'number') {\n    return `${val}`;\n  }\n\n  if (Array.isArray(val)) {\n    return `[${val.map(v => toVal(v)).join(', ')}]`;\n  }\n\n  // Escape windows paths\n  val = val ? val.replace(/\\\\([^\\\\])/g, '\\\\\\\\$1') : val;\n  return `\"${val}\"`;\n}\n\nexport default Preview;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Presets.css\";\n\nimport Select from \"../controls/Select\";\nimport Item from \"../Item\";\n\nimport mining from \"./mining.json\";\nimport ports from \"./ports.json\";\n\nimport { mix, clone } from \"../../util\";\n\nfunction toVal(val) {\n  return { name: val, value: val };\n}\n\nconst presets = {\n  None: null,\n  Defaults: null,\n  Mining: mining,\n  \"Non-standard Ports\": ports\n};\n\nclass Presets extends PureComponent {\n  static propTypes = {\n    preset: PropTypes.string,\n    defaults: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    preset: \"None\"\n  };\n\n  change = preset => {\n    if (preset === \"None\") {\n      return;\n    }\n\n    if (this.props.preset === \"None\") {\n      if (!window.confirm(\"Do you want to overwrite current config?\")) {\n        this.forceUpdate();\n        return;\n      }\n    }\n\n    const data = mix(clone(this.props.defaults), clone(presets[preset] || {}));\n    this.props.onChange(preset, data);\n  };\n\n  render() {\n    const { preset } = this.props;\n\n    return (\n      <div className=\"presets\">\n        <Item title={\"\"} description={\"Load predefined config.\"}>\n          <Select\n            onChange={this.change}\n            value={preset}\n            values={Object.keys(presets).map(toVal)}\n            id={\"presets\"}\n            disabled={false}\n          />\n        </Item>\n      </div>\n    );\n  }\n}\n\nexport default Presets;\n","import Presets from './Presets';\nexport default Presets;\n","import React, { Component, Fragment } from \"react\";\nimport isEqual from \"lodash.isequal\";\n\nimport TopBar from \"./components/TopBar\";\nimport Modal from \"./components/Modal\";\nimport Editor from \"./components/Editor\";\nimport Preview from \"./components/Preview\";\nimport Presets from \"./components/Presets\";\n\nimport { detectPlatform } from \"./system\";\nimport { data } from \"./util\";\n\nfunction loadFromURL() {\n  const hash = window.location.hash;\n  if (!hash.startsWith(\"#config=\")) {\n    return null;\n  }\n\n  try {\n    const config = hash.split(\"=\")[1];\n    return JSON.parse(window.atob(config));\n  } catch (e) {\n    console.warn(\"Error parsing config from URL: \", e);\n    return null;\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    return JSON.parse(window.localStorage.getItem(\"last-config\"));\n  } catch (e) {\n    window.localStorage.setItem(\"last-config\", null);\n    return null;\n  }\n}\n\nfunction loadSettings() {\n  const defaultSettings = generateDefaults(data);\n  try {\n    let settings = loadFromLocalStorage();\n    const url = loadFromURL();\n    if (settings && url) {\n      const diff = JSON.stringify(settings) !== JSON.stringify(url);\n      if (\n        diff &&\n        window.confirm(\n          \"Detected config in URL. Do you want to override your current config?\"\n        )\n      ) {\n        settings = null;\n      }\n    }\n    if (!settings && url) {\n      settings = url;\n    }\n    if (settings && typeof settings === \"object\") {\n      // make sure the sections are always created\n      const errors = [];\n      Object.keys(defaultSettings).forEach(key => {\n        settings[key] = settings[key] || {};\n        Object.keys(defaultSettings[key]).forEach(prop => {\n          let settingsValue = settings[key][prop];\n          let defaultSettingsValue = defaultSettings[key][prop];\n          if (settingsValue === undefined) {\n            settings[key][prop] = defaultSettingsValue;\n          } else if (typeof settingsValue !== typeof defaultSettingsValue) {\n            errors.push({\n              section: key,\n              prop,\n              value: settingsValue,\n              type: typeof settingsValue,\n              expected: typeof defaultSettingsValue\n            });\n            console.error(\n              `Incorrect type for config item ${key}.${prop} with value ${JSON.stringify(\n                settingsValue\n              )} (found ${typeof settingsValue}, expected ${typeof defaultSettingsValue})`\n            );\n            settings[key][prop] = defaultSettingsValue;\n          }\n        });\n      });\n      return { settings, errors };\n    }\n  } catch (e) {\n    console.warn(e);\n  }\n\n  return { settings: defaultSettings, errors: [] };\n}\n\nfunction saveSettings(settings) {\n  const defaultSettings = generateDefaults(data);\n  const cloned = JSON.parse(JSON.stringify(settings));\n\n  Object.keys(defaultSettings).forEach(section => {\n    Object.keys(defaultSettings[section]).forEach(prop => {\n      if (isEqual(cloned[section][prop], defaultSettings[section][prop])) {\n        delete cloned[section][prop];\n      }\n    });\n\n    if (Object.keys(cloned[section]).length === 0) {\n      delete cloned[section];\n    }\n  });\n\n  const json = JSON.stringify(cloned);\n  try {\n    window.localStorage.setItem(\"last-config\", json);\n    window.location.hash = \"config=\" + window.btoa(json);\n  } catch (e) {}\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const { settings, errors } = loadSettings();\n\n    let modal;\n    if (!errors.length) {\n      modal = { visible: false };\n    } else {\n      let lis = errors.map(({ section, prop, value, type, expected }, i) => (\n        <li key={i}>\n          <em>\n            {section}.{prop}\n          </em>{\" \"}\n          has value <em>{JSON.stringify(value)}</em> of type <em>{type}</em>;\n          expected type <em>{expected}</em>\n        </li>\n      ));\n      modal = {\n        visible: true,\n        title: \"Warning\",\n        content: (\n          <Fragment>\n            <p>\n              {lis.length > 1 ? \"Some items\" : \"An item\"} couldn't be parsed\n              from the loaded config:\n            </p>\n            <ul>{lis}</ul>\n          </Fragment>\n        )\n      };\n    }\n\n    this.state = {\n      preset: undefined,\n      settings,\n      defaults: generateDefaults(data),\n      modal\n    };\n  }\n\n  handleChange = settings => {\n    saveSettings(settings);\n    this.setState({\n      preset: undefined,\n      settings\n    });\n  };\n\n  handlePreset = (preset, settings) => {\n    saveSettings(settings);\n    this.setState({\n      preset,\n      settings\n    });\n  };\n\n  handleError = error => {\n    this.setState({\n      modal: {\n        visible: true,\n        title: \"Error\",\n        content: <p>{error}</p>\n      }\n    });\n  };\n\n  render() {\n    const { settings, defaults, preset, modal } = this.state;\n\n    return (\n      <div className=\"mdl-layout mdl-js-layout mdl-layout--fixed-header\">\n        <TopBar />\n        <main className=\"mdl-layout__content\">\n          <div className=\"mdl-grid\">\n            <div className=\"mdl-cell mdl-cell--6-col mdl-cell--12-col-tablet left-panel main-panels\">\n              <Editor settings={settings} onChange={this.handleChange} />\n            </div>\n            <div className=\"mdl-cell mdl-cell--6-col mdl-cell--12-col-tablet right-panel main-panels\">\n              <Presets\n                preset={preset}\n                defaults={defaults}\n                onChange={this.handlePreset}\n              />\n              <Preview\n                settings={settings}\n                defaults={defaults}\n                onChange={this.handleChange}\n                onError={this.handleError}\n              />\n            </div>\n          </div>\n        </main>\n        <Modal\n          title={modal.title}\n          isOpen={modal.visible}\n          onClose={() => this.setState({ modal: { visible: false } })}\n        >\n          {modal.content}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction generateDefaults(settings) {\n  const defaults = Object.keys(settings).reduce((data, section) => {\n    data[section] = Object.keys(settings[section])\n      .filter(\n        key =>\n          typeof settings[section][key] === \"object\" &&\n          settings[section][key].default !== undefined\n      )\n      .reduce((d, key) => {\n        d[key] = settings[section][key].default;\n        return d;\n      }, {});\n    return data;\n  }, {});\n\n  defaults.__internal.platform = detectPlatform();\n  return defaults;\n}\n\nexport default App;\n","import React from 'react';\n\nconst Loader = ({children}) => {\n    return (\n        <div style={{ marginTop: 20, textAlign: \"center\" }}>\n            <div className=\"mdl-spinner mdl-spinner--single-color mdl-js-spinner is-active\"></div>\n            <p>{children}</p>\n        </div>\n    )\n};\n\nexport default Loader;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './avenir-std.css';\nimport './material.css';\nimport 'material-design-lite/material.js';\nimport 'getmdl-select/getmdl-select.min.css';\nimport 'getmdl-select/getmdl-select.min.js';\nimport './index.css';\nimport {loadSource} from \"./util\";\nimport Loader from \"./components/Loader\";\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(<Loader/>, rootElement);\n\nloadSource()\n    .then(() => {\n        ReactDOM.render(<App />, rootElement);\n    })\n    .catch(e => {\n        console.error(e);\n    });\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst stylesNormal = { overflow: \"visible\" };\nconst stylesLarge = { overflow: \"visible\", height: \"auto\" };\n\nfunction Item({ title, description, children, disabled, large }) {\n  const isDisabled = disabled ? \"disabled\" : \"\";\n  return (\n    <li\n      className={`mdl-list__item mdl-list__item--two-line ${isDisabled}`}\n      style={large ? stylesLarge : stylesNormal}\n    >\n      <span className=\"mdl-list__item-primary-content\">\n        <span>{title}</span>\n        <span className=\"mdl-list__item-sub-title\">{description}</span>\n      </span>\n      <span className=\"mdl-list__item-secondary-content\">{children}</span>\n    </li>\n  );\n}\n\nItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array])\n    .isRequired,\n  disabled: PropTypes.bool,\n  large: PropTypes.bool\n};\n\nItem.defaultPropTypes = {\n  disabled: false,\n  large: false\n};\n\nexport default Item;\n"],"sourceRoot":""}